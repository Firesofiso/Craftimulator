//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;
using System.Collections;

namespace AssemblyCSharp
{
	public class Person : MonoBehaviour
	{
		public Inventory bag;
		//public int id;
		public string name;
		public int craftSkill, gatheringSkill;
        public float lifeInSeconds, lastGatherSec;

        public Area currArea;

		public void createPerson(string n, int cSkill, int gSkill) {
            bag = new Inventory();
            bag.setMax(8);
            name = n;
			craftSkill = cSkill;
			gatheringSkill = gSkill;
            lifeInSeconds = Time.time;
            //lastGatherSec = Time.time;
            DontDestroyOnLoad(transform.gameObject);
		}


        void Start()
        {
            //bag = GetComponent<Inventory>();
            
        }
        
        void Update()
        {
            
        }
        

        public void StartGathering()
        {
            StartCoroutine(gatherCoroutine());
        }

        public IEnumerator gatherCoroutine()
        {
            Debug.Log("Coroutine started");
            while (true)
            {
                float delay;
                if (gatheringSkill == 0)
                {
                    delay = (float)(currArea.getDelay());
                }
                else
                {
                    delay = (float)(currArea.getDelay() * gatheringSkill * 0.05);
                }
                yield return new WaitForSeconds(delay);
                gather();
            }
            
            
        }

        //gather resource from current area
        public void gather()
        {
            if (currArea.getName() != "Camp") {

                bag.addItem(currArea.getResource(), 5); 
                //Debug.Log("In " + currArea.getName() + " getting " + currArea.getResource().GetComponent<Item>().getName());
            }
            //lastGatherSec = Time.time;
        }

		public void obtainItem(GameObject a) {
			bag.addItem(a);
		}

		public void dropOff(Inventory stock) {
			for (int i = 0; i < bag.Count ();  i++) {
				stock.addItem(bag.item (i));
			}
		}

        public int getItemCount(string i)
        {
            if (bag.exists(i))
            {
                return bag.item(bag.itemIndex(i)).GetComponent<Item>().getCount();
            }
            else
            {
                return 0;
            }

        }


        //~~~GETTERS & SETTERS~~~
		public void setArea(Area a) {
			currArea = a;
		}

		public Area getArea() {
			return currArea;
		}

		public void setName(string n) {
			name = n;
		}

		public string getName() {
			return name;
		}

        public Inventory getBag()
        {
            return bag;
        }

        public void setGather(int g)
        {
            gatheringSkill = g;
        }

        public int getGather()
        {
            return gatheringSkill;
        }


	}
}

